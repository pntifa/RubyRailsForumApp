<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <meta name="google-signin-client_id" content="1044723646064-88uj11s257r42prisvobfpuum36of1c7.apps.googleusercontent.com">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crertal</title>
    
<body>

    <header>
        <h1>Crertal</h1>
    </header>

    <section>
        <h2>Find Users and Form Workgroups</h2>

        <form action="#" method="get" onsubmit="checkSignInAndRedirect('search'); return false;">
            <label for="interests">Search by Hobby/Interests:</label>
            <input type="text" id="interests" name="interests" placeholder="Enter your interests">

            <label for="courses">Search by Courses:</label>
            <input type="text" id="courses" name="courses" placeholder="Enter your courses">

            <button type="submit">Search</button>
        </form>

        <form action="#" method="post" onsubmit="checkSignInAndRedirect('createWorkgroup'); return false;">
            <label for="createWorkgroup">Create a Workgroup:</label>
            <input type="text" id="createWorkgroup" name="createWorkgroup" placeholder="Enter workgroup name">

            <label for="workgroupInterests">Workgroup Interests:</label>
            <input type="text" id="workgroupInterests" name="workgroupInterests" placeholder="Enter workgroup interests">

            <button type="submit">Create Workgroup</button>
        </form>
    </section>

    /*
        <div id="authModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
            
                <!-- Login Form -->
                <form id="loginForm">
                    <label for="username">Username:</label>
                    <input type="text" id="username" name="username" placeholder="Enter your username">

                    <label for="password">Password:</label>
                    <input type="password" id="password" name="password" placeholder="Enter your password">

                    <button type="submit">Login</button>
                </form>

                <!-- Register Form -->
                <form id="registerForm" action="#" method="post" onsubmit="registerUser(); return false;">
                    <label for="username">Username:</label>
                    <input type="text" id="username" name="username" placeholder="Enter your username" required>

                    <label for="fullname">Full Name:</label>
                    <input type="text" id="fullname" name="fullname" placeholder="Enter your full name" required>

                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" placeholder="Enter your email" required>

                    <label for="password">Password:</label>
                    <input type="password" id="password" name="password" placeholder="Enter your password" required>

                    <label for="interests">Interests:</label>
                    <input type="text" id="interests" name="interests" placeholder="Enter your interests" required>

                    <label for="courses">Courses:</label>
                    <input type="text" id="courses" name="courses" placeholder="Enter your courses" required>

                    <button type="submit">Register</button>
                </form>

                <!-- Google Sign-In Button -->
                <div class="g-signin2" data-onsuccess="onSignIn"></div>
            </div>
        </div>

        <div id="popupMessage">
            <p>Registration successful!</p>
        </div>

        <script>

            // Get the modal
            var modal = document.getElementById('authModal');

            // Get the button that opens the modal
            var loginBtn = document.getElementById("loginBtn");
            var registerBtn = document.getElementById("registerBtn");

            // Get the sign-out button
            var signOutBtn = document.getElementById("signOutBtn");

            function openLoginModal() {
                modal.style.display = "block";
                showLoginForm(); // Show the login form when opening the modal
            }

            // Function to open the register modal
            function openRegisterModal() {
                modal.style.display = "block";
                showRegisterForm(); // Show the register form when opening the modal
            }

            function closeModal() {
                modal.style.display = "none";
            }

            function updateSignOutBtnVisibility() {
                var auth2 = gapi.auth2.getAuthInstance();
                if (auth2.isSignedIn.get()) {
                    signOutBtn.style.display = "inline-block";
                } else {
                    signOutBtn.style.display = "none";
                }
            }

            updateSignOutBtnVisibility();

            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSignOutBtnVisibility);

            function signOut() {
                var auth2 = gapi.auth2.getAuthInstance();
                auth2.signOut().then(function () {
                    console.log('User signed out.');
                    updateSignOutBtnVisibility();
                });
            }

            // When the user clicks on the button, open the modal
            btn.onclick = function() {
                openModal();
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function(event) {
                if (event.target == modal) {
                    closeModal();
                }
            }
            function checkSignInAndRedirect(action) {
                var auth2 = gapi.auth2.getAuthInstance();
                if (!auth2.isSignedIn.get()) {
                    // User is not signed in, redirect to login page
                    openModal();
                } else {
                    // User is signed in, perform the specified action
                    if (action === "search") {
                        // Redirect to search page or perform search action
                        alert("Performing search action");
                    } else if (action === "createWorkgroup") {
                        // Redirect to create workgroup page or perform create workgroup action
                        alert("Performing create workgroup action");
                    }
                }
            }

            function showLoginForm() {
                var loginForm = document.getElementById("loginForm");
                var registerForm = document.getElementById("registerForm");

                // Show the login form and hide the register form
                loginForm.style.display = "block";
                registerForm.style.display = "none";
            }

        // Function to show the register form
        function showRegisterForm() {
            var loginForm = document.getElementById("loginForm");
            var registerForm = document.getElementById("registerForm");

            // Show the register form and hide the login form
            loginForm.style.display = "none";
            registerForm.style.display = "block";
        }

            // Initially show the login form
            showLoginForm();

            // Function to update sign-out button visibility
            function updateSignOutBtnVisibility() {
                var auth2 = gapi.auth2.getAuthInstance();
                if (auth2.isSignedIn.get()) {
                    signOutBtn.style.display = "inline-block"; // Show the sign-out button
                } else {
                    signOutBtn.style.display = "none"; // Hide the sign-out button
                }
            }

            // Initialize the visibility on page load
            updateSignOutBtnVisibility();

            // Listen for changes in sign-in state
            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSignOutBtnVisibility);

            // Function to sign out
            function signOut() {
                var auth2 = gapi.auth2.getAuthInstance();
                auth2.signOut().then(function () {
                    console.log('User signed out.');
                    updateSignOutBtnVisibility(); // Update visibility after sign-out
                });
            }
            
        </script>

        <script>
            function onSignIn(googleUser) {
                var profile = googleUser.getBasicProfile();
                console.log('ID: ' + profile.getId()); #Do not send to your backend! Use an ID token instead.
                console.log('Name: ' + profile.getName());
                console.log('Image URL: ' + profile.getImageUrl());
                console.log('Email: ' + profile.getEmail()); #This is null if the 'email' scope is not present.

                #var header = document.querySelector('header');

                #var userNameElement = document.createElement('div');
                #userNameElement.textContent = profile.getName();

                #header.appendChild(userNameElement);

                #var loginRegisterBtn = document.getElementById('loginRegisterBtn');
                #loginRegisterBtn.style.display = 'none';

                #var signOutBtn = document.getElementById('signOutBtn');
                #signOutBtn.style.display = 'inline-block';

            
                #closeModal();
            }

            function registerUser() {
                var formData = new FormData(document.getElementById("registerForm"));

                fetch('/api/register', {
                    method: 'POST',
                    body: formData,
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text(); // Assuming backend sends a text response
                })
                .then(data => {
                    // Show pop-up message or redirect user to login page
                    alert('Registration successful!');
                })
                .catch(error => {
                    // Handle errors
                    console.error('Error during registration:', error);
                    alert('Error during registration. Please try again.');
                });
            }


        // Event listener for form submission
        document.getElementById("registerForm").addEventListener("submit", function(event) {
            event.preventDefault(); // Prevent the default form submission behavior
            registerUser(); // Call the function to register the user
        });

        </script>
    */

</body>
</html>
